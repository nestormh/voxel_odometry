<launch>
    <arg name="namespace" default="voxel_grid_tracking"/>
    <param name="use_sim_time" value="true"/>
    
    <!-- <node pkg="tf" type="static_transform_publisher" name="map2odom" args="0 0 0 1.57 0 0 map odom 100" /> -->
    <node pkg="tf" type="static_transform_publisher" name="map2odom" args="0 0 0 0 0 0 map odom 100" />
    
<!--     <node pkg="tf" type="static_transform_publisher" name="odom2basefootprint" args="0 0 0 0 0 0 odom base_footprint 100" /> -->
    
    <node pkg="tf" type="static_transform_publisher" name="basefootprint2baselink" args="0 0 0 -1.57 0 0 base_footprint base_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="baselink2baseleftcam" args="0.27 0 1.45 0 0 -1.57079632679489661923 base_link base_left_cam 100" />
    <node pkg="tf" type="static_transform_publisher" name="leftcam2baseleftcam" args="0 0 0 0 0 0 base_left_cam left_cam 100" />
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink2baseleftcam" args="0.27 0 1.65 0 0 -1.57 base_link base_left_cam 100" /> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baseleftcam2leftcam" args="0 -0.4 0 0 0 1.57 base_left_cam left_cam 100" /> -->
    
<!--    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen" required="true">
        <remap from="cloud_in" to="/$(arg namespace)/pointCloudFilteredAndTransformed" />
        
        <param name="frame_id" value="map" />
        
        <param name="resolution" value="0.25" />
        <param name="base_frame_id" value="base_footprint" />
        <param name="filter_ground" value="true" />
        <param name="frame_id" value="map" />
        <param name="frame_id" value="map" />
        
    </node>-->
    
    <node pkg="viso2_ros" type="stereo_odometer" name="stereo_odometer" output="screen" required="true">
<!--         <remap from="stereo" to="$(arg namespace)/stereo_and_odom"/> -->
        <param name="base_link_frame_id" value="base_footprint" />
        <param name="odom_frame_id" value="odom" />
        
        <remap from="stereo/left/image" to="$(arg namespace)/stereo_and_odom/left/image_rect"/>
        <remap from="stereo/right/image" to="$(arg namespace)/stereo_and_odom/right/image_rect"/>
        <remap from="stereo/left/camera_info" to="$(arg namespace)/stereo_and_odom/left/camera_info"/>
        <remap from="stereo/right/camera_info" to="$(arg namespace)/stereo_and_odom/right/camera_info"/>
    </node>
    
    <group ns="$(arg namespace)">
        
        <!--     <node launch-prefix="gdb -ex run &#45;&#45;args" name="stereo_and_odom" pkg="voxel_grid_tracking" type="stereo_and_odom" output="screen" required="true" > -->
        <node name="stereo_and_odom" pkg="voxel_grid_tracking" type="stereo_and_odom" output="screen" required="true" >
        </node> 
        
        <group ns="stereo_and_odom">
            <node name="stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc" output="screen" required="true" >
            </node>
        </group>
        
       <node pkg="grull_elas_ros" type="elas_ros" name="elas_ros" output="screen">
            <remap from="stereo" to="stereo_and_odom" />
            <remap from="stereo_and_odom/left/$(arg namespace)/image" to="stereo_and_odom/left/image_rect_color" />
            <remap from="stereo_and_odom/right/$(arg namespace)/image" to="stereo_and_odom/right/image_rect_color" />
            
            <param name="approximate_sync" value="true" />
            
<!--             <remap from="base_frame_id" to="left_cam" /> -->
            <param name="base_frame_id" value="left_cam" />
            <param name="pose_frame_id" value="base_link" /> 
        </node>
        
        <node pkg="rsgm_ros" type="rsgm_ros" name="rsgm_ros" output="screen" required="false">
            <remap from="stereo" to="stereo_and_odom" />
            <remap from="stereo_and_odom/left/$(arg namespace)/image" to="stereo_and_odom/left/image_rect_color" />
            <remap from="stereo_and_odom/right/$(arg namespace)/image" to="stereo_and_odom/right/image_rect_color" />
            <remap from="~depth" to="/$(arg namespace)/depth" />
            <remap from="~disparity" to="/$(arg namespace)/disparity" />
            
            <rosparam file="$(find rsgm_ros)/params/rsgm_ros_params.yaml" command="load" ns="" />
        </node>
        
<!--        <node pkg="oflow_3d_generator" type="oflow_3d_generator" name="oflow_3d_generator" output="screen" required="true">
            <remap from="stereo" to="stereo_and_odom" />
            <remap from="stereo_and_odom/left/$(arg namespace)/image" to="stereo_and_odom/left/image" />
            <remap from="stereo_and_odom/right/$(arg namespace)/image" to="stereo_and_odom/right/image" />
            <remap from="stereo_and_odom/disparity/$(arg namespace)/image" to="rsgm_ros/disparity" />
            
            <param name="approximate_sync" value="true" />
            
            <param name="motion_frame_id" value="map" />
        </node>-->
        
<!--         <node launch-prefix="gdb &#45;&#45;args" name="voxel_grid_tracking" pkg="voxel_grid_tracking" type="voxel_grid_tracking" output="screen" required="true" > -->
<!--         <node launch-prefix="gdb -ex run &#45;&#45;args" name="voxel_grid_tracking" pkg="voxel_grid_tracking" type="voxel_grid_tracking" output="screen" required="true" > -->
        <node name="voxel_grid_tracking" pkg="voxel_grid_tracking" type="voxel_grid_tracking" output="screen" required="false" >
            <remap from="~/deltaTime"
                   to="/$(arg namespace)/stereo_and_odom/deltaTime" />
            <remap from="~/pointCloud"
                   to="/$(arg namespace)/obstaclesPointCloud" />
            <remap from="~/flow_vectors"
                   to="/$(arg namespace)/flow_vectors" />
            <remap from="~/camera_info"
                   to="/$(arg namespace)/stereo_and_odom/left/camera_info" />
            
            <param name="use_oflow" value="false" />
        </node>
    </group>
    
    <!--     I must place the remap here. For some reason, it is ignored in other location -->
<!--     <remap from="/filters/filter_manager/disparity_input" to="/$(arg namespace)/elas_ros/disparity" /> -->
    <remap from="/filters/filter_manager/disparity_input" to="/$(arg namespace)/disparity" />
    <remap from="/filters/filter_manager/left/camera_info" to="/$(arg namespace)/stereo_and_odom/left/camera_info" />
    <remap from="/filters/filter_manager/right/camera_info" to="/$(arg namespace)/stereo_and_odom/right/camera_info" />
    <group ns="filters">
        <!-- Filter Manager -->
        <node pkg="nodelet" type="nodelet" name="filter_manager" args="manager" output="screen"/>
        
        <node pkg="nodelet" type="nodelet" name="DisparityFiltersNodelet" 
              args="load disparity_filters/DisparityFiltersNodelet filter_manager" output="screen">
            
            </node>    
            <rosparam file="$(find disparity_filters)/params/disparity_filters_params.yaml" command="load" ns="" />
            
            <node pkg="nodelet" type="nodelet" name="Depth2PointCloudNodelet" 
                  args="load depth_image_proc/point_cloud_xyzrgb filter_manager" output="screen">
                
                <remap from="rgb/image_rect_color" to="/$(arg namespace)/stereo_and_odom/left/image_rect_color" />
                <remap from="rgb/camera_info" to="/$(arg namespace)/stereo_and_odom/left/camera_info" />
<!--                 <remap from="depth_registered/image_rect" to="/$(arg namespace)/depth" /> -->
                <remap from="depth_registered/image_rect" to="/filters/filter_manager/depth" />
            </node>     
<!--     </group> -->
    
<!--     <group ns="filters"> -->
        <!-- PCL Manager -->
        <node pkg="nodelet" type="nodelet" name="box_filter_manager" args="manager" output="screen"/>
        
        <include file="$(find grull_transform_pointcloud)/launch/launch.launch">
            <arg name="nodelet_name"     value="cam2footprint_pc_transform" />
            <arg name="input_topic"     value="/filters/depth_registered/points" />
<!--             <arg name="input_topic"     value="/$(arg namespace)/elas_ros/point_cloud" /> -->
            <arg name="output_topic"    value="/$(arg namespace)/point_cloud_footprint"/>
            <arg name="target_frame"    value="base_footprint"/>
            <arg name="nodelet_manager" value="box_filter_manager"/>
        </include>
        
        <!-- Run a passthrough filter to delimit in x direction -->
        <node pkg="nodelet" type="nodelet" name="psx" args="load pcl/PassThrough box_filter_manager" output="screen">
            <remap from="~input" to="/$(arg namespace)/point_cloud_footprint" />
            <rosparam>
                filter_field_name: x
                filter_limit_min: 5.0
                filter_limit_max: 25.0
            </rosparam>
        </node>
        
        <!-- Run a passthrough filter to delimit in y direction -->
           <node pkg="nodelet" type="nodelet" name="psy" args="load pcl/PassThrough box_filter_manager" output="screen">
            <remap from="~input" to="psx/output" />
            <rosparam>
            filter_field_name: y
            filter_limit_min: -5.0
            filter_limit_max: 5.0
            </rosparam>
        </node>
        
        <!-- Run a passthrough filter to delimit in z direction -->
        <node pkg="nodelet" type="nodelet" name="psz" args="load pcl/PassThrough box_filter_manager" output="screen">
            <remap from="~input" to="psy/output" />
            <rosparam>
                filter_field_name: z
                filter_limit_min: 0.0
                filter_limit_max: 4.0
            </rosparam>
        </node>
        
        <include file="$(find grull_transform_pointcloud)/launch/launch.launch">
            <arg name="nodelet_name"     value="footprint2map_pc_transform" />
            <arg name="input_topic"     value="psz/output" />
<!--             <arg name="input_topic"     value="/$(arg namespace)/elas_ros/point_cloud" /> -->
            <arg name="output_topic"    value="/$(arg namespace)/pointCloudTransformed"/>
            <arg name="target_frame"    value="map"/>
            <arg name="nodelet_manager" value="box_filter_manager"/>
        </include>
                
        <node pkg="nodelet" type="nodelet" name="heightmap_nodelet"
              args="load velodyne_height_map/HeightMapNodelet box_filter_manager">
            <param name="cell_size" value="0.25"/>
            <param name="full_clouds" value="true"/>
            
<!--             <remap from="velodyne_points" to="/$(arg namespace)/pointCloudFilteredAndTransformed"/> -->
            <remap from="velodyne_points" to="/$(arg namespace)/pointCloudTransformed" />
            <remap from="velodyne_obstacles" to="/$(arg namespace)/obstaclesPointCloud"/>
        </node>
    </group>
    
    <!-- <node launch-prefix="optirun" pkg="rviz" type="rviz" name="rviz" required="false"  args="&#45;&#45;display-config  -->
    <node pkg="rviz" type="rviz" name="rviz" required="false"  args="&#45;&#45;display-config 
          $(find voxel_grid_tracking)/config/VoxelGridTracking.rviz"/>
    <!--<node pkg="rosbag" type="record"  name="rosbag"
    args="-o /tmp/2011_09_26_drive_0091_sync_" />-->
    
    </launch>