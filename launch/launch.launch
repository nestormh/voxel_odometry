<launch>
    <arg name="namespace" default="verdino"/>
    <arg name="show_rviz" default="true"/>
    <arg name="do_publish_intermediate_info" default="false" />
    
    <arg name="voxel_odometry_params_file"
         default="$(find voxel_odometry)/params/voxel_odometry_verdino_params.yaml"/>
    
    <group ns="$(arg namespace)">
        <node name="voxel_odometry" pkg="voxel_odometry" type="voxel_odometry" output="screen" required="true" >
            <remap from="~/deltaTime"
                   to="/$(arg namespace)/stereo_and_odom/deltaTime" />
            <remap from="~/pointCloud"
                   to="/$(arg namespace)/point_cloud_footprint_voxel_odom" />
            <remap from="~/flow_vectors"
                   to="/$(arg namespace)/flow_vectors" />
            <remap from="~/left/camera_info"
                   to="/$(arg namespace)/stereo_and_odom/left/camera_info" />
            <remap from="~/right/camera_info"
                   to="/$(arg namespace)/stereo_and_odom/right/camera_info" />
            <remap from="~/dbg/image_rect_color"
                   to="/$(arg namespace)/stereo_and_odom/left/image_rect_color" />
           <remap from="~fakePointCloud"
                   to="/verdino/fakePointCloud" />
            
           <rosparam file="$(arg voxel_odometry_params_file)" command="load" ns="" />
            
            <param name="publish_intermediate_info" value="$(arg do_publish_intermediate_info)" />
        </node>
    
        <group ns="filters">
            <!-- PCL Manager -->
            <node pkg="nodelet" type="nodelet" name="box_filter_manager" args="manager" output="screen" required="true" />
            
            <include file="$(find grull_transform_pointcloud)/launch/launch.launch">
                <arg name="nodelet_name"     value="cam2footprint_pc_transform" />
                <arg name="input_topic"     value="/$(arg namespace)/velodyne_points" />
                <arg name="output_topic"    value="/$(arg namespace)/point_cloud_footprint_voxel_odom"/>
                <arg name="target_frame"    value="base_footprint"/>
                <arg name="nodelet_manager" value="box_filter_manager"/>
            </include>
        </group>
        
        <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
            <param name="output_frame" value="odom"/>
            <param name="freq" value="1000.0"/>
            <param name="sensor_timeout" value="1.0"/>
            <param name="odom_used" value="false"/>
            <param name="imu_used" value="false"/>
            <param name="vo_used" value="true"/>
            <param name="debug" value="true"/>
            <param name="self_diagnose" value="true"/>
            
            <remap from="vo"  to="/$(arg namespace)/voxel_odometry/odom" />
        </node>
        
    </group>
    
    <group if="$(arg show_rviz)">
        <node pkg="rviz" type="rviz" name="rviz" required="false"  args="&#45;&#45;display-config 
            $(find voxel_odometry)/config/VoxelOdometryVerdino.rviz"/>
    </group>
</launch>